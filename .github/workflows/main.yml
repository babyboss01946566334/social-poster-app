# ওয়ার্কফ্লোর নাম
name: Build Flutter APK

# কখন এই ওয়ার্কফ্লোটি চলবে তা নির্ধারণ করুন
on:
  push:
    branches:
      - main  # শুধুমাত্র 'main' ব্রাঞ্চে কোড পুশ হলে এটি চলবে

jobs:
  build:
    # কোন অপারেটিং সিস্টেমে বিল্ড হবে তা নির্ধারণ করুন
    runs-on: ubuntu-latest

    steps:
      # ধাপ ১: আপনার রিপোজিটরির কোড ডাউনলোড করা
      - name: Checkout repository
        uses: actions/checkout@v4

      # ধাপ ২: জাভা সেটআপ করা (অ্যান্ড্রয়েড বিল্ডের জন্য জরুরি)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ধাপ ৩: ফ্ল্যাটার এনভায়রনমেন্ট সেটআপ করা
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0' # আপনার ফ্ল্যাটার ভার্সন এখানে দিতে পারেন
          channel: 'stable'
          cache: true

      # ধাপ ৪: ফ্ল্যাটার প্যাকেজ ইনস্টল করা
      - name: Install dependencies
        run: flutter pub get

      # ধাপ ৫: APK ফাইল তৈরি করা
      # এটি একটি release APK তৈরি করবে
      - name: Build APK
        run: flutter build apk --release

      # ধাপ ৬ (ঐচ্ছিক কিন্তু অত্যন্ত দরকারি): বিল্ড হওয়া APK ফাইলটি আপলোড করা
      # এটি বিল্ড শেষ হওয়ার পর APK ফাইলটিকে একটি ডাউনলোডযোগ্য আর্টিফ্যাক্ট হিসেবে সেভ করবে
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk```

#### **ধাপ ৫: Workflow ফাইলটি সেভ করুন**

১. কোড পেস্ট করার পর, উপরের ডানদিকে থাকা **"Commit changes..."** বাটনটিতে ক্লিক করুন।
২. একটি পপ-আপ আসবে। সেখানে আপনি চাইলে কমিট মেসেজ পরিবর্তন করতে পারেন অথবা ডিফল্ট রেখেই **"Commit changes"** বাটনে ক্লিক করুন।



ব্যাস, আপনার কাজ শেষ!

### **এরপর কী হবে?**

আপনি ফাইলটি সেভ করার সাথে সাথেই GitHub Actions স্বয়ংক্রিয়ভাবে প্রথম বিল্ডটি চালু করে দেবে।

*   আপনি `Actions` ট্যাবে ফিরে গিয়ে চলমান বিল্ড প্রক্রিয়াটি লাইভ দেখতে পারবেন।
*   বিল্ডটি সফলভাবে শেষ হতে ৫-১০ মিনিট সময় লাগতে পারে।
*   বিল্ড শেষ হলে, আপনি ওই বিল্ডের সামারি পেজে "Artifacts" সেকশনের নিচে `release-apk` নামে একটি ডাউনলোডযোগ্য ফাইল দেখতে পাবেন। এটিই আপনার কাঙ্ক্ষিত APK ফাইল।



এখন থেকে, আপনি যতবারই আপনার `main` ব্রাঞ্চে কোনো নতুন কোড `git push` করবেন, ততবারই GitHub Actions স্বয়ংক্রিয়ভাবে একটি নতুন APK তৈরি করে দেবে।

### **অন্যান্য বিকল্প**

যদি কোনো কারণে GitHub Actions আপনার পছন্দ না হয়, তবে এই বিকল্পগুলো দেখতে পারেন:

1.  **Bitrise:** এটি মোবাইল অ্যাপ (বিশেষ করে ফ্ল্যাটার) বিল্ড করার জন্য খুবই জনপ্রিয় এবং এর ইউজার ইন্টারফেস বেশ সহজ। এটিরও একটি ভালো ফ্রি টায়ার রয়েছে।
2.  **Appcircle:** এটিও মোবাইল CI/CD-এর জন্য তৈরি একটি প্ল্যাটফর্ম এবং ফ্ল্যাটার সাপোর্ট করে। এটি সেটআপ করা তুলনামূলকভাবে সহজ।

তবে আমি আপনাকে প্রথমে **GitHub Actions** ব্যবহার করার পরামর্শ দেব, কারণ এটি সবচেয়ে সহজ এবং আপনার বর্তমান ওয়ার্কফ্লোর সাথে সুন্দরভাবে মিশে যাবে।
